# Copyright lowRISC contributors.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

BUILD_TEMPLATE = """# Automatically generated by @hurt//config:repo.bzl.  Do not edit.
package(default_visibility = ["//visibility:public"])

filegroup(
    name = "all",
    srcs = glob(["**"], exclude={exclude}),
)

exports_files(glob([{exports}]))
"""

def _tools_repository_impl(rctx):
    if rctx.attr.archive and rctx.attr.url:
        fail("Set only one of \"archive\" or \"url\".")
    if rctx.attr.build_file_content and (rctx.attr.exclude or rctx.attr.exports):
        fail("Set only one of \"build_file_content\" or {\"exclude\", \"exports\"}.")

    if rctx.attr.archive:
        rctx.extract(
            archive = rctx.attr.archive,
            stripPrefix = rctx.attr.strip_prefix,
        )
    elif rctx.attr.url:
        rctx.download_and_extract(
            url = rctx.attr.url,
            sha256 = rctx.attr.sha256,
            stripPrefix = rctx.attr.strip_prefix,
        )

    if rctx.attr.build_file_content:
        rctx.file(
            "BUILD.bazel",
            rctx.attr.build_file_content,
        )
    else:
        rctx.file(
            "BUILD.bazel",
            BUILD_TEMPLATE.format(
                exclude = json.encode(rctx.attr.exclude),
                exports = json.encode(rctx.attr.exports),
            ),
        )

tools_repository = repository_rule(
    implementation = _tools_repository_impl,
    attrs = {
        "archive": attr.label(doc = "Local path to tools archive", allow_single_file = True),
        "url": attr.string(doc = "URL to tools archive"),
        "sha256": attr.string(doc = "SHA256 digest of the tools archive"),
        "strip_prefix": attr.string(doc = "Strip path prefixes when unarchiving"),
        "build_file_content": attr.string(doc = "Content of the BUILD file in the repository"),
        "exclude": attr.string_list(doc = "Glob of files to exclude from the tools filegroup"),
        "exports": attr.string_list(doc = "Glob of files to export (typical the bin dir)"),
    },
)
