# Copyright lowRISC contributors.
# Licensed under the Apache License, Version 2.0, see LICENSE for details.
# SPDX-License-Identifier: Apache-2.0

package(default_visibility = ["//visibility:public"])

load("//hdl:hdl.bzl", "hdl_binary")
load("//fpga/lattice:constraints.bzl", "ecp5_constraints", "ice40_constraints")

ice40_constraints(
    name = "ice40",
    device = "hx8k",
    package = "ct256",
    pcf = "pinmap_ice40_hx8k_evb.pcf",
)

ecp5_constraints(
    name = "ecp5",
    device = "um5g-85k",
    lpf = "pinmap_lattice_ecp5_evb.lpf",
    package = "CABGA381",
)

hdl_binary(
    name = "larsen",
    srcs = [
        "larsen.v",
    ] + select({
        "//simulator:verilator": ["sim_main.cpp"],
        "//conditions:default": [],
    }),
    constraints = select({
        "//fpga/lattice:ice40": ":ice40",
        "//fpga/lattice:ecp5": ":ecp5",
        "//simulator:verilator": "//simulator:default",
    }),
    top = "top",
)

hdl_binary(
    name = "larsen2",
    srcs = [
        "larsen.v",
    ] + select({
        "//simulator:verilator": ["sim_main.cpp"],
        "//conditions:default": [],
    }),
    constraints = select({
        "//fpga/lattice:ice40": ":ice40",
        "//fpga/lattice:ecp5": ":ecp5",
        "//simulator:verilator": "//simulator:default",
    }),
    tool_options = {
        "verilator": [
            "--cc",
            "--build",
            "-j",
        ],
        "simulator": ["Vlarsen__ALL.a"],
    },
    top = "top",
)

cc_binary(
    name = "sim_main",
    srcs = ["sim_main.cpp"],
    deps = [
        ":larsen2",
        "@verilator//:includes",
    ],
)
